<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soqi.oem.dao.OembaseMapper" >
  <resultMap id="BaseResultMap" type="com.soqi.oem.gentry.Oembase" >
    <id column="OemId" property="oemid" jdbcType="INTEGER" />
    <result column="MealId" property="mealid" jdbcType="INTEGER" />
    <result column="TempId" property="tempid" jdbcType="INTEGER" />
    <result column="Domain" property="domain" jdbcType="VARCHAR" />
    <result column="CompanyName" property="companyname" jdbcType="VARCHAR" />
    <result column="Phone" property="phone" jdbcType="VARCHAR" />
    <result column="ExpiryTime" property="expirytime" jdbcType="TIMESTAMP" />
    <result column="AddTime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="TotalUsersCount" property="totaluserscount" jdbcType="INTEGER" />
    <result column="TotalTaskCount" property="totaltaskcount" jdbcType="INTEGER" />
    <result column="OemLevel" property="oemlevel" jdbcType="INTEGER" />
    <result column="ParentOemId" property="parentoemid" jdbcType="INTEGER" />
    <result column="Status" property="status" jdbcType="INTEGER" />
    <result column="MealStatus" property="mealstatus" jdbcType="INTEGER" />
    <result column="HasNextOem" property="hasnextoem" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from OemBase
    where OemId = #{oemid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.soqi.oem.gentry.Oembase" >
    insert into OemBase (MealId, TempId, 
      Domain, CompanyName, Phone, 
      ExpiryTime, TotalUsersCount, TotalTaskCount, 
      OemLevel, ParentOemId, Status, AddTime, HasNextOem,
      MealStatus)
    values (#{mealid,jdbcType=INTEGER}, #{tempid,jdbcType=INTEGER}, 
      #{domain,jdbcType=VARCHAR}, #{companyname,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{expirytime,jdbcType=TIMESTAMP}, #{totaluserscount,jdbcType=INTEGER}, #{totaltaskcount,jdbcType=INTEGER}, 
      #{oemlevel,jdbcType=INTEGER}, #{parentoemid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, sysdatetime(), #{hasnextoem,jdbcType=INTEGER},
      #{mealstatus,jdbcType=INTEGER})
      <selectKey resultType="java.lang.Integer" keyProperty="oemid" order="AFTER">
    	select @@IDENTITY as oemid
  	  </selectKey>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.soqi.oem.gentry.Oembase" >
    update OemBase
    <trim prefix="set" suffixOverrides=",">
      <if test="mealid!=null and mealid!=''">
      MealId = #{mealid,jdbcType=INTEGER},
      </if>
      <if test="tempid!=null and tempid!=''">
      TempId = #{tempid,jdbcType=INTEGER},
      </if>
      <if test="domain!=null and domain!=''">
      "Domain" = #{domain,jdbcType=VARCHAR},
      </if>
      <if test="companyname!=null and companyname!=''">
      CompanyName = #{companyname,jdbcType=VARCHAR},
      </if>
      <if test="phone!=null and phone!=''">
      Phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="expirytime!=null">
      ExpiryTime = #{expirytime,jdbcType=TIMESTAMP},
      </if>
      <if test="totaluserscount!=null and totaluserscount!=''">
      TotalUsersCount = #{totaluserscount,jdbcType=INTEGER},
      </if>
      <if test="totaltaskcount!=null and totaltaskcount!=''">
      TotalTaskCount = #{totaltaskcount,jdbcType=INTEGER},
      </if>
      <if test="oemlevel!=null and oemlevel!=''">
      OemLevel = #{oemlevel,jdbcType=INTEGER},
      </if>
      <if test="parentoemid!=null and parentoemid!=''">
      ParentOemId = #{parentoemid,jdbcType=INTEGER},
      </if>
      <if test="status!=null and status!=''">
      Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="mealstatus!=null and mealstatus!=''">
      MealStatus = #{mealstatus,jdbcType=INTEGER}
      </if>
    </trim>
     where OemId = #{oemid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select OemId, MealId, TempId, Domain, CompanyName, Phone, ExpiryTime, TotalUsersCount, 
    TotalTaskCount, OemLevel, ParentOemId, Status, MealStatus,HasNextOem
    from OemBase
    where OemId = #{oemid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select OemId, MealId, TempId, "Domain", CompanyName, Phone, ExpiryTime, TotalUsersCount, 
    TotalTaskCount, OemLevel, ParentOemId, "Status", MealStatus
    from OemBase
  </select>
  
  <select id="qryChildOemsByOemId" resultMap="BaseResultMap" parameterType="map" >
    select OemId, MealId, TempId, Domain, CompanyName, Phone, ExpiryTime, TotalUsersCount, 
    TotalTaskCount, OemLevel, ParentOemId, Status, MealStatus, HasNextOem, AddTime
    from OemBase where ParentOemId = #{parentoemid,jdbcType=INTEGER} Order by OemId Offset #{start,jdbcType=INTEGER} Row Fetch Next #{size,jdbcType=INTEGER} Rows Only
  </select>
  
  <select id="qryCountChildOemsByOemId" resultType="java.lang.Integer" parameterType="map" >
    select count(1) as total
    from OemBase
    where ParentOemId = #{parentoemid,jdbcType=INTEGER}
  </select>
  
</mapper>