<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.soqi.oem.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="com.soqi.oem.gentry.Customer" >
    <id column="CustomerId" property="customerid" jdbcType="INTEGER" />
    <result column="OemId" property="oemid" jdbcType="INTEGER" />
    <result column="Pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="Mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="RealName" property="realname" jdbcType="VARCHAR" />
    <result column="CallName" property="callname" jdbcType="VARCHAR" />
    <result column="QQ" property="qq" jdbcType="VARCHAR" />
    <result column="Phone" property="phone" jdbcType="VARCHAR" />
    <result column="Weixin" property="weixin" jdbcType="VARCHAR" />
    <result column="LastLoginTime" property="lastlogintime" jdbcType="TIMESTAMP" />
    <result column="LastLoginIp" property="lastloginip" jdbcType="VARCHAR" />
    <result column="CurrentLoginTime" property="currentlogintime" jdbcType="TIMESTAMP" />
    <result column="CurrentLoginIp" property="currentloginip" jdbcType="VARCHAR" />
    <result column="Domain" property="domain" jdbcType="VARCHAR" />
    <result column="LoginCount" property="logincount" jdbcType="INTEGER" />
    <result column="Status" property="status" jdbcType="BIT" />
    <result column="IsOemManager" property="isoemmanager" jdbcType="BIT" />
    <result column="AddTime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from Customer
    where CustomerId = #{customerid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.soqi.oem.gentry.Customer">
    insert into Customer (OemId, Pwd, 
      Mobile, RealName, CallName, 
      QQ, Phone, Weixin, 
      Domain, Status, IsOemManager,
      AddTime)
    values (#{oemid,jdbcType=INTEGER}, #{pwd,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{callname,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{weixin,jdbcType=VARCHAR}, 
      #{domain,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{isoemmanager,jdbcType=BIT}, 
      sysdatetime())
      <selectKey resultType="java.lang.Integer" keyProperty="customerid" order="AFTER">
    	select @@IDENTITY as customerid
  	  </selectKey>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.soqi.oem.gentry.Customer" >
    update Customer
    <trim prefix="set" suffixOverrides=",">
      <if test="pwd!=null and pwd!=''">
      Pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="mobile!=null and mobile!=''">
      Mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="realname!=null and realname!=''">
      RealName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="callname!=null and callname!=''">
      CallName = #{callname,jdbcType=VARCHAR},
      </if>
      <if test="qq!=null and qq!=''">
      QQ = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="phone!=null and phone!=''">
      Phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="weixin!=null and weixin!=''">
      Weixin = #{weixin,jdbcType=VARCHAR},
      </if>
      <if test="lastlogintime!=null and lastlogintime!=''">
      LastLoginTime = #{lastlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastloginip!=null and lastloginip!=''">
      LastLoginIp = #{lastloginip,jdbcType=VARCHAR},
      </if>
      <if test="currentlogintime!=null and currentlogintime!=''">
      CurrentLoginTime = #{currentlogintime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentloginip!=null and currentloginip!=''">
      CurrentLoginIp = #{currentloginip,jdbcType=VARCHAR},
      </if>
      <if test="logincount!=null and logincount!=''">
      LoginCount = #{logincount,jdbcType=INTEGER},
      </if>
      <if test="addtime!=null and paddtime!=''">
      AddTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status!=null and status!=''">
      Status = #{status,jdbcType=BIT}
      </if>
    </trim>       
    where CustomerId = #{customerid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select CustomerId, OemId, Pwd, Mobile, RealName, CallName, QQ, Phone, Weixin, LastLoginTime, 
    LastLoginIp, Domain, CurrentLoginTime, CurrentLoginIp, LoginCount, Status, AddTime
    from Customer
    where CustomerId = #{customerid,jdbcType=INTEGER}
  </select>
  <select id="selectByDomainAndMobile" resultMap="BaseResultMap" parameterType="map" >
    select CustomerId, OemId, Pwd, Mobile, RealName, CallName, QQ, Phone, Weixin, LastLoginTime, 
    LastLoginIp, Domain, CurrentLoginTime, CurrentLoginIp, LoginCount, Status, AddTime
    from Customer
    where Mobile = #{mobile,jdbcType=VARCHAR} and Domain = #{domain,jdbcType=VARCHAR}
  </select>
  
  <select id="qryCustomersByCusIdAndOemid" resultMap="BaseResultMap" parameterType="map" >
    select CustomerId, OemId, Pwd, Mobile, RealName, CallName, QQ, Phone, Weixin, LastLoginTime, 
    LastLoginIp, Domain, CurrentLoginTime, CurrentLoginIp, LoginCount, Status, AddTime
    from Customer
    where CustomerId != #{customerid,jdbcType=INTEGER} and OemId = #{oemid,jdbcType=INTEGER} Order by CustomerId Offset #{start,jdbcType=INTEGER} Row Fetch Next #{size,jdbcType=INTEGER} Rows Only
  </select>
  
  <select id="qryCountByCusIdAndOemid" resultType="java.lang.Integer" parameterType="map" >
    select count(1) as total
    from Customer
    where CustomerId != #{customerid,jdbcType=INTEGER} and OemId = #{oemid,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select CustomerId, OemId, Pwd, Mobile, RealName, CallName, QQ, Phone, Weixin, LastLoginTime, 
    LastLoginIp, CurrentLoginTime, CurrentLoginIp, Domain, LoginCount, Status, AddTime
    from Customer
  </select>
</mapper>